name: Quarto rendering and Docker building
on:
  push: {}

jobs:
  quartotests:
    container:
      image: bioconductor/bioconductor_docker:devel
    name: Install dependencies and render Quarto documents
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: "Repository metadata"
        uses: varunsridharan/action-repository-meta@main
        with:
          REPOSITORY: ${{github.repository}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - continue-on-error: true
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          LONGNAME="$REPOSITORY_DESCRIPTION"
          SHORTNAME="$(echo ${{github.repository}} | awk -F'/' '{print tolower($NF)}')"
          REPOSITORY="$(echo ${{github.repository}} | awk '{print tolower($0)}')"
          BRANCH="${GITHUB_REF#refs/heads/}"

          sed -i "s#almahmoud/BiocDeployableQuarto#$REPOSITORY#g" README.md
          sed -i "s#-main#-$BRANCH#g" README.md

          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update README $(echo $(date +'%m-%d-%y-%H-%M-%S'))"
          git push

      - name: Install all missing R packages and python modules
        run: ls vignettes/* | grep ".qmd" | xargs -i bash .github/scripts/install_missing.sh {}
      - name: Render all
        run: ls vignettes/* | grep ".qmd" | xargs -i bash -c "quarto render $(realpath {}) --to all"
      - name: Push rendered formats
        shell: bash
        run: |
          set -x
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          getformats () {
              # Get next section after format
              AFTERFORMAT=$(sed -n '/format:/,/---/p' $1 | grep "^[a-z]\+:" | grep -A1 "format:" | grep -v "format:")
              AFTERFORMAT=${AFTERFORMAT:-"---"}
              # Loop through formats and add _files for html
              sed -n "/format:/,/$AFTERFORMAT/{/format:/b;/$AFTERFORMAT/b;p}" $1 | grep "^  \w" | sed 's/\( \|:\)//g' | awk '{print "."$1}' | sed 's/.html/.html\n_files/g' >> tmpformats 
          }
          export -f getformats
          ls vignettes/* | grep ".qmd" > tmpfiles
          cat tmpfiles | xargs -i bash -c "getformats {}"
          # List of all files to be moved
          cat tmpformats | sort | uniq | xargs -i bash -c "cat tmpfiles | xargs -I## bash -c \"echo ## | sed 's/.qmd/{}/g'\"" > tmpgenerated
          rm -rf autogenerated
          mkdir -p autogenerated/quarto
          cat tmpgenerated | xargs -i mv {} autogenerated/quarto/
          rm tmpformats tmpfiles tmpgenerated
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Rendering quarto documents on $(echo $(date +'%m-%d-%y-%H-%M-%S'))"
          git push

  buildrstudio:
    name: Build RStudio image
    runs-on: ubuntu-latest
    needs: quartotests
    steps:
      - uses: actions/checkout@v3
      - name: Login to docker hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=biocrstudio-{{branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          build-args: |
            GIT_REPO=${{github.repository}}
          file: .github/scripts/rstudio.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: "Repository metadata"
        uses: varunsridharan/action-repository-meta@main
        with:
          REPOSITORY: ${{github.repository}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Push run_id
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 20
          shell: bash
          command: |
            git config --global --add safe.directory "$GITHUB_WORKSPACE"

            LONGNAME="$REPOSITORY_DESCRIPTION"
            SHORTNAME="$(echo ${{github.repository}} | awk -F'/' '{print $NF}')"
            REPOSITORY="${{github.repository}}"
            BRANCH="${GITHUB_REF#refs/heads/}"

            bash .github/scripts/generate_wrapper.sh "$LONGNAME" "$SHORTNAME" "$REPOSITORY" "$BRANCH" "biocrstudio"
            
            mkdir -p /tmp
            cp -r autogenerated/wrappers /tmp/
            git pull origin main || git reset --hard origin/main
            cp -r /tmp/wrappers autogenerated/

            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "Generated Galaxy wrappers on $(echo $(date +'%m-%d-%y-%H-%M-%S'))"
            git push

  buildgxyjupyter:
    name: Build Galaxy Jupyter image
    runs-on: ubuntu-latest
    needs: quartotests
    steps:
      - uses: actions/checkout@v3
      - name: Login to docker hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=gxyjupyter-{{branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          build-args: |
            GIT_REPO=${{github.repository}}
          file: .github/scripts/galaxy-jupyter.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: "Repository metadata"
        uses: varunsridharan/action-repository-meta@main
        with:
          REPOSITORY: ${{github.repository}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Push run_id
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 20
          shell: bash
          command: |
            git config --global --add safe.directory "$GITHUB_WORKSPACE"

            LONGNAME="$REPOSITORY_DESCRIPTION"
            SHORTNAME="$(echo ${{github.repository}} | awk -F'/' '{print $NF}')"
            REPOSITORY="${{github.repository}}"
            BRANCH="${GITHUB_REF#refs/heads/}"

            bash .github/scripts/generate_wrapper.sh "$LONGNAME" "$SHORTNAME" "$REPOSITORY" "$BRANCH" "biocrstudio"
            
            mkdir -p /tmp
            cp -r autogenerated/wrappers /tmp/
            git pull origin main || git reset --hard origin/main
            cp -r /tmp/wrappers autogenerated/

            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "Generated Galaxy wrappers on $(echo $(date +'%m-%d-%y-%H-%M-%S'))"
            git push

  buildanvilrstudio:
    name: Build AnVIL RStudio image
    runs-on: ubuntu-latest
    needs: quartotests
    steps:
      - uses: actions/checkout@v3
      - name: Login to docker hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=biocanvil-{{branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          build-args: |
            GIT_REPO=${{github.repository}}
          file: .github/scripts/anvil-rstudio.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
